<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d2/dbb/mpblibs_8h" kind="file" language="C++">
    <compoundname>mpblibs.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="d3/d91/mpb_time_base_8h" local="yes">Includes/mpbTimeBase.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdarg.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>Includes/mpblibs.h</label>
        <link refid="d2/dbb/mpblibs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>Sources/mpbTimeBase.c</label>
        <link refid="de/dd4/mpb_time_base_8c"/>
      </node>
      <node id="2">
        <label>Includes/mpbTimeBase.h</label>
        <link refid="d3/d91/mpb_time_base_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Includes/mpblibs.h</label>
        <link refid="d2/dbb/mpblibs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d2/dbb/mpblibs_8h_1ac7c4b8d34e6a2bba87b3087c3ed85d33" prot="public" static="no">
        <name>USE_HEAP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="91" column="9" bodyfile="Includes/mpblibs.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dbb/mpblibs_8h_1aaef0f1be1a04bc1e009f58444c78bfd8" prot="public" static="no">
        <name>USE_NEP_HEAP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="92" column="9" bodyfile="Includes/mpblibs.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dbb/mpblibs_8h_1a2e90499a479278efe715329cf93c04e6" prot="public" static="no">
        <name>USE_MALLOC_FAILED_HOOK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="93" column="9" bodyfile="Includes/mpblibs.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dbb/mpblibs_8h_1a5be40d2b5f27bf3acccdc6c8d90171c3" prot="public" static="no">
        <name>eMpbATTR_PACKED</name>
        <initializer>__packed</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="95" column="9" bodyfile="Includes/mpblibs.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dbb/mpblibs_8h_1a64f83e73cfc447367c9ef8c1cacabe8c" prot="public" static="no">
        <name>__nop</name>
        <param></param>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="107" column="10" bodyfile="Includes/mpblibs.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dbb/mpblibs_8h_1a32b8b02632a14416704460518cdedda5" prot="public" static="no">
        <name>vMpblibsAssertParam</name>
        <param><defname>expr</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>expression to be evaluated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="337" column="11" bodyfile="Includes/mpblibs.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" prot="public" static="no" strong="no">
        <type></type>
        <name>eMpbError_t</name>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3df453108b088af1ab4d781dcf1d0c15" prot="public">
          <name>eSuccess</name>
          <initializer>=  0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3850b8824af139a4e2f0f5bcc536ec16" prot="public">
          <name>eInvalidParameter</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a5f9683ba69a8e110f1e9d9185fbf0236" prot="public">
          <name>eAccessDenied</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3def441bb594afa0f663b20ed78bc9a8" prot="public">
          <name>eBusy</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a599c82586e4b1b1db272307f53b38aa4" prot="public">
          <name>eTimeout</name>
          <initializer>= -4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a430555d8b53bb7285afcc709f5115a25" prot="public">
          <name>eBufferEmpty</name>
          <initializer>= -5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a0a3c97f7fb557ed9b295e7af58cd3128" prot="public">
          <name>eBufferFull</name>
          <initializer>= -6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3610e92d54689c1f61254a55170eddac" prot="public">
          <name>eBufferOverflow</name>
          <initializer>= -7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41ab41c7d96f3b5a6c9a1056665a2d37851" prot="public">
          <name>eOutOfMemory</name>
          <initializer>= -8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a9f5feef0f1f1ff204fd87a98c55d4095" prot="public">
          <name>eCheckFailed</name>
          <initializer>= -9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41aa72aef087c5a686ead6c3d7c4fe9af74" prot="public">
          <name>eCorrupted</name>
          <initializer>= -10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41ae3501655f30f07acaf1b0003bc6e5e62" prot="public">
          <name>eOutOfRange</name>
          <initializer>= -11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a8ce9ac1d4d3ff6d7603156c8e9db6552" prot="public">
          <name>eNotFound</name>
          <initializer>= -12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a2cdfc91caa9a3637ca36317db742a47a" prot="public">
          <name>eInvalidObject</name>
          <initializer>= -13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41abbb0a5db83a6ea06c8a1c075a0d835c4" prot="public">
          <name>eNotDiscarded</name>
          <initializer>= -14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41afb7dc9bcbc444b967afb095ece4a6fbc" prot="public">
          <name>eNotRegistered</name>
          <initializer>= -15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41aa92c7ecd0c521213904721b3e68a65c7" prot="public">
          <name>ePropertyNotSuported</name>
          <initializer>= -16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a8dfbd2aec3afb9ccf44633b7175c2d42" prot="public">
          <name>eObjectTypeNotSuported</name>
          <initializer>= -17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a24dab14c021bd5e4d08ba769c05a2b6a" prot="public">
          <name>eDriverError</name>
          <initializer>= -18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41afa17af642e091fa381c0f4b825e59850" prot="public">
          <name>eUnknownError</name>
          <initializer>= -19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a4565dfb18b7a56d3a5b875ca488a6b5b" prot="public">
          <name>eInternalDeviceError</name>
          <initializer>= -20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Mpb defined error codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="37" column="1" bodyfile="Includes/mpblibs.h" bodystart="38" bodyend="60"/>
      </memberdef>
      <memberdef kind="enum" id="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352" prot="public" static="no" strong="no">
        <type></type>
        <name>eAccess_t</name>
        <enumvalue id="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352a9fa9300dac6bd2ee4fe699e1024d94ee" prot="public">
          <name>eREAD_ACCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352ae428fb1494a19ae3c65640137906988e" prot="public">
          <name>eWRITE_ACCESS</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Mpbtronic define access. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="66" column="1" bodyfile="Includes/mpblibs.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="enum" id="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363a" prot="public" static="no" strong="no">
        <type></type>
        <name>eBool_t</name>
        <enumvalue id="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363aa511514f9eb3e5e6e7d2474a98c17bc95" prot="public">
          <name>eFalse</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363aa82bcaa7cbf3a5b23fc4fba17f9261272" prot="public">
          <name>eTrue</name>
          <initializer>= !eFalse</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>boolean definition </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="76" column="1" bodyfile="Includes/mpblibs.h" bodystart="77" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t handle_t</definition>
        <argsstring></argsstring>
        <name>handle_t</name>
        <briefdescription>
<para>user define handle </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="86" column="17" bodyfile="Includes/mpblibs.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1aa57acc54a557120db7be004053db1364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vMpblibsUsDelay</definition>
        <argsstring>(uint32_t ulDelay)</argsstring>
        <name>vMpblibsUsDelay</name>
        <param>
          <type>uint32_t</type>
          <declname>ulDelay</declname>
        </param>
        <briefdescription>
<para>Delay for the specified number of micro seconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ulDelay</parametername>
</parameternamelist>
<parameterdescription>
<para>Blocking delay in micro seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Blocking </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="125" column="13" declfile="Includes/mpblibs.h" declline="125" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a643ca31d0250ccf8bea980d017e75a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsOpen</definition>
        <argsstring>(handle_t xStream, const uint32_t ulFlags)</argsstring>
        <name>eMpblibsOpen</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xStream</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>ulFlags</declname>
        </param>
        <briefdescription>
<para>opens, optionally takes control and optionally initializes an peripheral channel </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xStream</parametername>
</parameternamelist>
<parameterdescription>
<para>Application specific peripheral channel identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ulFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Application specific flags for stream initialization </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para>A peripheral channel can be define by its communication protocole (Modbus_COM1, BACnet_COM1, etc) or by target external device driver (PCA9555_1, M24C32_1, etc) This is a good place to add RTOS support for mutex or initialize low level layer. eMpb_Open should be called for multiple consecutive access algorithm along with eMpb_Close. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="139" column="20" declfile="Includes/mpblibs.h" declline="139" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1ab36b1093281a79e89df6bc15c7665638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsClose</definition>
        <argsstring>(handle_t xStream)</argsstring>
        <name>eMpblibsClose</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xStream</declname>
        </param>
        <briefdescription>
<para>closes, optionnaly releases control and optionally deinitializes peripheral channel </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xStream</parametername>
</parameternamelist>
<parameterdescription>
<para>Application specific peripheral channel identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para>This is a good place to add RTOS support for mutex. eMpb_Open should be called for multiple consecutive access algorithm along with eMpb_Close. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="148" column="20" declfile="Includes/mpblibs.h" declline="148" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1ab33b7250bac578100156ec98be1506d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsRead</definition>
        <argsstring>(handle_t xStream, size_t xAddrCmdSize, const void *pvAddrCmd, void *const pvBuffer, const size_t xBytes, size_t *pxBytesRead)</argsstring>
        <name>eMpblibsRead</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xStream</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xAddrCmdSize</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pvAddrCmd</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>xBytes</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>pxBytesRead</declname>
        </param>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xStream</parametername>
</parameternamelist>
<parameterdescription>
<para>Application specific peripheral channel identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xAddrCmdSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes of Memory Address or Device Command sent at the beginning of transaction. Can be 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pvAddrCmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to address or command buffer sent. NULL if xAddrCmdSize = 0, else not NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pvBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer where to receive read data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to be read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pxBytesRead</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer where to save number of bytes read. Can be NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="161" column="20" declfile="Includes/mpblibs.h" declline="161" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1addabdaa25875fd0be83fbebf6d9b9a63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsWrite</definition>
        <argsstring>(handle_t xStream, size_t xAddrCmdSize, const void *pvAddrCmd, const void *pvBuffer, const size_t xBytes, size_t *pxBytesWritten)</argsstring>
        <name>eMpblibsWrite</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xStream</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xAddrCmdSize</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pvAddrCmd</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>xBytes</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>pxBytesWritten</declname>
        </param>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xStream</parametername>
</parameternamelist>
<parameterdescription>
<para>Application specific peripheral channel identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xAddrCmdSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes of Memory Address or Device Command sent at the beginning of transaction. Can be 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pvAddrCmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to address or command buffer sent. NULL if xAddrCmdSize = 0, else not NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pvBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on data to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pxBytesRead</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer where to save number of bytes written. Can be NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="174" column="20" declfile="Includes/mpblibs.h" declline="174" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1ae8ab22981886806f6c96eddcf3648b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsIoCtl</definition>
        <argsstring>(handle_t xStream, uint32_t ulRequest, void *pvValue)</argsstring>
        <name>eMpblibsIoCtl</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xStream</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulRequest</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xStream</parametername>
</parameternamelist>
<parameterdescription>
<para>Application specific peripheral channel identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ulRequest</parametername>
</parameternamelist>
<parameterdescription>
<para>Control Request Identifier. Application Specific. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pvValue</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer on write value or where to save read value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="184" column="20" declfile="Includes/mpblibs.h" declline="184" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1ae24c87925bec628438823d751ce28945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsI2CRequest</definition>
        <argsstring>(eAccess_t eAccess, handle_t xI2Cx, uint8_t ucDevAddr, size_t xAddrCmdSize, const void *pvAddrCmd, void *pvBuffer, size_t xBytes, size_t *pxBytesRW)</argsstring>
        <name>eMpblibsI2CRequest</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352" kindref="member">eAccess_t</ref></type>
          <declname>eAccess</declname>
        </param>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xI2Cx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ucDevAddr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xAddrCmdSize</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pvAddrCmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xBytes</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>pxBytesRW</declname>
        </param>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eAccess</parametername>
</parameternamelist>
<parameterdescription>
<para>Read / Write access request </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xI2Cx</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C peripheral handle, HAL dependant. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DevAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Application specific external device address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xAddrCmdSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes of Memory Address or Device Command sent at the beginning of transaction. Can be 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pvAddrCmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to address or command buffer sent. NULL if xAddrCmdSize = 0, else not NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pvBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on data to be written or where to save read bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to be written or read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pxBytesRW</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer where to save number of bytes written or read. Can be NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="201" column="20" declfile="Includes/mpblibs.h" declline="201" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a57dc81afcaf7f53c3f40fbf94ce543e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsSPIBytesReadWrite</definition>
        <argsstring>(handle_t xSPIx, void *const pvBytesOut, void *pvBytesIn, size_t xBytes)</argsstring>
        <name>eMpblibsSPIBytesReadWrite</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xSPIx</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvBytesOut</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvBytesIn</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="208" column="20" declfile="Includes/mpblibs.h" declline="208" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a9c8ed36ba5fc73abc945db36f07093e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsSPIBlockReadWrite</definition>
        <argsstring>(eAccess_t eAccess, handle_t xSPIx, void *pvBuffer, size_t xBytes, size_t *pxBytesRW)</argsstring>
        <name>eMpblibsSPIBlockReadWrite</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352" kindref="member">eAccess_t</ref></type>
          <declname>eAccess</declname>
        </param>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xSPIx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xBytes</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>pxBytesRW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="215" column="20" declfile="Includes/mpblibs.h" declline="215" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a99671c017e74b8e321883711657d379d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsUartInit</definition>
        <argsstring>(handle_t xUARTx, handle_t xGPIOx, uint32_t ulPin, uint32_t ulBaudRate, uint8_t ucWordLength, uint8_t ucStopBits, uint8_t ucParity, size_t xSilenceBits, size_t xFrameTimeoutBits)</argsstring>
        <name>eMpblibsUartInit</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xUARTx</declname>
        </param>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xGPIOx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulPin</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulBaudRate</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ucWordLength</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ucStopBits</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ucParity</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xSilenceBits</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xFrameTimeoutBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="222" column="20" declfile="Includes/mpblibs.h" declline="222" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a4985f208ca479e6220b1c7ee29272393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsUartRead</definition>
        <argsstring>(handle_t xUARTx, void *const pvBuffer, size_t xBytes, size_t *pxBytesRead, uint32_t ulMsTimeout)</argsstring>
        <name>eMpblibsUartRead</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xUARTx</declname>
        </param>
        <param>
          <type>void *const</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xBytes</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>pxBytesRead</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulMsTimeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="229" column="20" declfile="Includes/mpblibs.h" declline="229" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a9df6d174472789a6686acf8382f477e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsUartWrite</definition>
        <argsstring>(handle_t xUARTx, const void *pvBuffer, size_t xBytes, size_t *pxBytesWritten, uint32_t ulMsTimeout)</argsstring>
        <name>eMpblibsUartWrite</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xUARTx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xBytes</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>pxBytesWritten</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ulMsTimeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="236" column="20" declfile="Includes/mpblibs.h" declline="236" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1abb13ab3139806d22c7bc4bb531005d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsPwrMonInit</definition>
        <argsstring>(void)</argsstring>
        <name>eMpblibsPwrMonInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="243" column="20" declfile="Includes/mpblibs.h" declline="243" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1aabbefd5da0d16e9307544e02b15bc07b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsPwrMonWaitPwrUp</definition>
        <argsstring>(void)</argsstring>
        <name>eMpblibsPwrMonWaitPwrUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="250" column="20" declfile="Includes/mpblibs.h" declline="250" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a97ce594607035faceb813e22acc64030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sMpblibsPwrMonIsLow</definition>
        <argsstring>(void)</argsstring>
        <name>sMpblibsPwrMonIsLow</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="257" column="12" declfile="Includes/mpblibs.h" declline="257" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a6e744a80f67d4b8a6548f8eb7b663470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vMpblibsPowerMonitorSoftReset</definition>
        <argsstring>(void)</argsstring>
        <name>vMpblibsPowerMonitorSoftReset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Do a soft reset of the system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="262" column="13" declfile="Includes/mpblibs.h" declline="262" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a1ef53a0f200b470e6854c1d5c1cca538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsAnalogReadRaw</definition>
        <argsstring>(handle_t xANALOGx, int32_t *plReading)</argsstring>
        <name>eMpblibsAnalogReadRaw</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xANALOGx</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>plReading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xANALOGx</parametername>
</parameternamelist>
<parameterdescription>
<para>Analog peripheral value handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plReading</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on variable where to save reading value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lResolution</parametername>
</parameternamelist>
<parameterdescription>
<para>resolution or range in which to return reading </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="272" column="20" declfile="Includes/mpblibs.h" declline="272" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1ab2970804a7f6d102a545f0339b432314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsAnalogReadmV</definition>
        <argsstring>(handle_t xANALOGx, int32_t *plReading)</argsstring>
        <name>eMpblibsAnalogReadmV</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xANALOGx</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>plReading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="273" column="20" declfile="Includes/mpblibs.h" declline="273" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a794c9ea4ea4b68f2495afa6cccaf4355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsAnalogReadRes</definition>
        <argsstring>(handle_t xANALOGx, int32_t lResolution, int32_t *plReading)</argsstring>
        <name>eMpblibsAnalogReadRes</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xANALOGx</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>lResolution</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>plReading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="274" column="20" declfile="Includes/mpblibs.h" declline="274" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a967a436257376a53a7f384abea242671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsAnalogWriteRaw</definition>
        <argsstring>(handle_t xANALOGx, int32_t lOutput)</argsstring>
        <name>eMpblibsAnalogWriteRaw</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xANALOGx</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>lOutput</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xANALOGx</parametername>
</parameternamelist>
<parameterdescription>
<para>Analog peripheral value handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lOutput</parametername>
</parameternamelist>
<parameterdescription>
<para>value to write to Analog peripheral </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lResolution</parametername>
</parameternamelist>
<parameterdescription>
<para>resolution or range of lOutput </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="284" column="20" declfile="Includes/mpblibs.h" declline="284" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a6d55173401c7ed0bc62ee51c6666a475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsAnalogWritemV</definition>
        <argsstring>(handle_t xANALOGx, int32_t lOutput)</argsstring>
        <name>eMpblibsAnalogWritemV</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xANALOGx</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>lOutput</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="285" column="20" declfile="Includes/mpblibs.h" declline="285" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a9deebf53f2e0d959103353c0d2a24a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsAnalogWriteRes</definition>
        <argsstring>(handle_t xANALOGx, int32_t lResolution, int32_t lOutput)</argsstring>
        <name>eMpblibsAnalogWriteRes</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xANALOGx</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>lResolution</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>lOutput</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="286" column="20" declfile="Includes/mpblibs.h" declline="286" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1af12f280fd24c7935ac12121c97fdf806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsBinaryRead</definition>
        <argsstring>(handle_t xBINARYx, eBool_t *peState)</argsstring>
        <name>eMpblibsBinaryRead</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xBINARYx</declname>
        </param>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363a" kindref="member">eBool_t</ref> *</type>
          <declname>peState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xBINARYx</parametername>
</parameternamelist>
<parameterdescription>
<para>Binary peripheral value handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>peState</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on variable where to save reading value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eState</parametername>
</parameternamelist>
<parameterdescription>
<para>value to write to binary peripheral </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="296" column="20" declfile="Includes/mpblibs.h" declline="296" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a3fc5cfd4a4f6078f66e17c010fd6243b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsBinaryWrite</definition>
        <argsstring>(handle_t xBINARYx, eBool_t eState)</argsstring>
        <name>eMpblibsBinaryWrite</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xBINARYx</declname>
        </param>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363a" kindref="member">eBool_t</ref></type>
          <declname>eState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="297" column="20" declfile="Includes/mpblibs.h" declline="297" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a43103ae924d54707ea536cd8bccc330d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsBinaryToggle</definition>
        <argsstring>(handle_t xBINARYx)</argsstring>
        <name>eMpblibsBinaryToggle</name>
        <param>
          <type><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
          <declname>xBINARYx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="298" column="20" declfile="Includes/mpblibs.h" declline="298" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1ad036997433fb1293f106a4bb696943ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsMalloc</definition>
        <argsstring>(void **ppvMemBlock, size_t xSize)</argsstring>
        <name>eMpblibsMalloc</name>
        <param>
          <type>void **</type>
          <declname>ppvMemBlock</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ppvMemBlock</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the memory block pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xSize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the memory block to be allocated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or librairie error message </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="308" column="20" declfile="Includes/mpblibs.h" declline="308" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a6b70ece72c639f88ecdb64e1bff68d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref></type>
        <definition>eMpbError_t eMpblibsRealloc</definition>
        <argsstring>(void **ppvMemBlock, size_t xSize)</argsstring>
        <name>eMpblibsRealloc</name>
        <param>
          <type>void **</type>
          <declname>ppvMemBlock</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>xSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="309" column="20" declfile="Includes/mpblibs.h" declline="309" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1abf9d6756e1c391f627ef82cedfbd3daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vMpblibsFree</definition>
        <argsstring>(void **ppvMemBlock)</argsstring>
        <name>vMpblibsFree</name>
        <param>
          <type>void **</type>
          <declname>ppvMemBlock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="310" column="13" declfile="Includes/mpblibs.h" declline="310" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1adbe40fe763b2ce7c126b0002f104b9af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t xMpblibsGetFreeHeapSize</definition>
        <argsstring>(void)</argsstring>
        <name>xMpblibsGetFreeHeapSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="311" column="15" declfile="Includes/mpblibs.h" declline="311" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1af4a5651f995c3e909071126a6c2efddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t xMpblibsGetMinEverFreeHeapSize</definition>
        <argsstring>(void)</argsstring>
        <name>xMpblibsGetMinEverFreeHeapSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="312" column="15" declfile="Includes/mpblibs.h" declline="312" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a35e6a0f02f66b82bdf12c11321b1e008" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vMpblibsMallocFailedHook</definition>
        <argsstring>(size_t xSizeRequired)</argsstring>
        <name>vMpblibsMallocFailedHook</name>
        <param>
          <type>size_t</type>
          <declname>xSizeRequired</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="322" column="13" declfile="Includes/mpblibs.h" declline="322" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbb/mpblibs_8h_1a0dbc68dca2eb32f532e33d5cb19010df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vMpblibsAssertFailed</definition>
        <argsstring>(char const *func, char const *file, int line)</argsstring>
        <name>vMpblibsAssertFailed</name>
        <param>
          <type>char const *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/mpblibs.h" line="338" column="14" declfile="Includes/mpblibs.h" declline="338" declcolumn="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This header provides common definitions needed mpb library @description. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>juan </para>
</simplesect>
<simplesect kind="date"><para>Created on 2021-03-1 </para>
</simplesect>
<simplesect kind="note"><para>indent using tab size : 4 </para>
</simplesect>
<simplesect kind="copyright"><para>MPB, Montreal, Qc <heading level="2"><center><copy/> COPYRIGHT 2021 Mpb, Montreal, Quebec, Canada</center></heading>
</para>
</simplesect>
<heading level="2"><center><copy/> All rights reserved.</center></heading>
</para>
<para><linebreak/>
<linebreak/>
 <center>This document contains confidential and proprietary information of MPB (subject to a non-disclosure agreement) and shall</center> <center>not be disclosed, distributed, or reproduced in whole or in part, without the prior written authorization of NEPTRONIC.</center> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Header<sp/>guard<sp/>-------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__MPBLIBS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__MPBLIBS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>-----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Standard<sp/>library<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>integer<sp/>types<sp/>and<sp/>their<sp/>limits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>NULL,<sp/>size_t,<sp/>atoi(),<sp/>div(),<sp/>malloc,<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>NULL,<sp/>size_t,<sp/>mem*<sp/>and<sp/>str*<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>variable<sp/>arguments,<sp/>va_start,<sp/>va_arg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>NULL,<sp/>size_t,<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Typedef<sp/>------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3df453108b088af1ab4d781dcf1d0c15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3df453108b088af1ab4d781dcf1d0c15" kindref="member">eSuccess</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>0,</highlight></codeline>
<codeline lineno="40" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3850b8824af139a4e2f0f5bcc536ec16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3850b8824af139a4e2f0f5bcc536ec16" kindref="member">eInvalidParameter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="41" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a5f9683ba69a8e110f1e9d9185fbf0236" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a5f9683ba69a8e110f1e9d9185fbf0236" kindref="member">eAccessDenied</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-2,</highlight></codeline>
<codeline lineno="42" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3def441bb594afa0f663b20ed78bc9a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3def441bb594afa0f663b20ed78bc9a8" kindref="member">eBusy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-3,</highlight></codeline>
<codeline lineno="43" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a599c82586e4b1b1db272307f53b38aa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a599c82586e4b1b1db272307f53b38aa4" kindref="member">eTimeout</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-4,</highlight></codeline>
<codeline lineno="44" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a430555d8b53bb7285afcc709f5115a25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a430555d8b53bb7285afcc709f5115a25" kindref="member">eBufferEmpty</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-5,</highlight></codeline>
<codeline lineno="45" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a0a3c97f7fb557ed9b295e7af58cd3128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a0a3c97f7fb557ed9b295e7af58cd3128" kindref="member">eBufferFull</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-6,</highlight></codeline>
<codeline lineno="46" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3610e92d54689c1f61254a55170eddac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a3610e92d54689c1f61254a55170eddac" kindref="member">eBufferOverflow</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-7,</highlight></codeline>
<codeline lineno="47" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41ab41c7d96f3b5a6c9a1056665a2d37851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41ab41c7d96f3b5a6c9a1056665a2d37851" kindref="member">eOutOfMemory</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-8,</highlight></codeline>
<codeline lineno="48" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a9f5feef0f1f1ff204fd87a98c55d4095" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a9f5feef0f1f1ff204fd87a98c55d4095" kindref="member">eCheckFailed</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-9,</highlight></codeline>
<codeline lineno="49" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41aa72aef087c5a686ead6c3d7c4fe9af74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41aa72aef087c5a686ead6c3d7c4fe9af74" kindref="member">eCorrupted</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-10,</highlight></codeline>
<codeline lineno="50" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41ae3501655f30f07acaf1b0003bc6e5e62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41ae3501655f30f07acaf1b0003bc6e5e62" kindref="member">eOutOfRange</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-11,</highlight></codeline>
<codeline lineno="51" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a8ce9ac1d4d3ff6d7603156c8e9db6552" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a8ce9ac1d4d3ff6d7603156c8e9db6552" kindref="member">eNotFound</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-12,</highlight></codeline>
<codeline lineno="52" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a2cdfc91caa9a3637ca36317db742a47a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a2cdfc91caa9a3637ca36317db742a47a" kindref="member">eInvalidObject</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-13,</highlight></codeline>
<codeline lineno="53" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41abbb0a5db83a6ea06c8a1c075a0d835c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41abbb0a5db83a6ea06c8a1c075a0d835c4" kindref="member">eNotDiscarded</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-14,</highlight></codeline>
<codeline lineno="54" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41afb7dc9bcbc444b967afb095ece4a6fbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41afb7dc9bcbc444b967afb095ece4a6fbc" kindref="member">eNotRegistered</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-15,</highlight></codeline>
<codeline lineno="55" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41aa92c7ecd0c521213904721b3e68a65c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41aa92c7ecd0c521213904721b3e68a65c7" kindref="member">ePropertyNotSuported</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-16,</highlight></codeline>
<codeline lineno="56" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a8dfbd2aec3afb9ccf44633b7175c2d42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a8dfbd2aec3afb9ccf44633b7175c2d42" kindref="member">eObjectTypeNotSuported</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-17,</highlight></codeline>
<codeline lineno="57" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a24dab14c021bd5e4d08ba769c05a2b6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a24dab14c021bd5e4d08ba769c05a2b6a" kindref="member">eDriverError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-18,</highlight></codeline>
<codeline lineno="58" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41afa17af642e091fa381c0f4b825e59850" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41afa17af642e091fa381c0f4b825e59850" kindref="member">eUnknownError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-19,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a4565dfb18b7a56d3a5b875ca488a6b5b" kindref="member">eInternalDeviceError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-20</highlight></codeline>
<codeline lineno="60" refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41a4565dfb18b7a56d3a5b875ca488a6b5b" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68" refid="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352a9fa9300dac6bd2ee4fe699e1024d94ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352a9fa9300dac6bd2ee4fe699e1024d94ee" kindref="member">eREAD_ACCESS</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="69" refid="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352ae428fb1494a19ae3c65640137906988e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352ae428fb1494a19ae3c65640137906988e" kindref="member">eWRITE_ACCESS</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352" kindref="member">eAccess_t</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78" refid="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363aa511514f9eb3e5e6e7d2474a98c17bc95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363aa511514f9eb3e5e6e7d2474a98c17bc95" kindref="member">eFalse</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="79" refid="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363aa82bcaa7cbf3a5b23fc4fba17f9261272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363aa82bcaa7cbf3a5b23fc4fba17f9261272" kindref="member">eTrue</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>!<ref refid="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363aa511514f9eb3e5e6e7d2474a98c17bc95" kindref="member">eFalse</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363a" kindref="member">eBool_t</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><sp/><sp/><sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>todo<sp/>:<sp/>à<sp/>déplacer<sp/>dans<sp/><sp/>mpblibsconfig.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="d2/dbb/mpblibs_8h_1ac7c4b8d34e6a2bba87b3087c3ed85d33" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_HEAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="d2/dbb/mpblibs_8h_1aaef0f1be1a04bc1e009f58444c78bfd8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_NEP_HEAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="d2/dbb/mpblibs_8h_1a2e90499a479278efe715329cf93c04e6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_MALLOC_FAILED_HOOK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>USE_ASSERT_FAILED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="d2/dbb/mpblibs_8h_1a5be40d2b5f27bf3acccdc6c8d90171c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>eMpbATTR_PACKED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__packed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>macro<sp/>-----------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__ICCARM__<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;intrinsics.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__nop()<sp/><sp/><sp/><sp/><sp/>__no_operation()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="d2/dbb/mpblibs_8h_1a64f83e73cfc447367c9ef8c1cacabe8c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__nop()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>enum<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>struct<sp/>----------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Global<sp/>variables<sp/>---------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>function<sp/>prototypes<sp/>---------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SOFTWARE<sp/>SERVICE<sp/>GLUE<sp/>LOGIC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="d2/dbb/mpblibs_8h_1aa57acc54a557120db7be004053db1364" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1aa57acc54a557120db7be004053db1364" kindref="member">vMpblibsUsDelay</ref>(<sp/>uint32_t<sp/>ulDelay<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>UNIVERSAL<sp/>SERIAL<sp/>I/O<sp/>API<sp/>GLUE<sp/>LOGIC<sp/>for<sp/>UART,<sp/>SPI<sp/>and<sp/>I2C<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="d2/dbb/mpblibs_8h_1a643ca31d0250ccf8bea980d017e75a58" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a643ca31d0250ccf8bea980d017e75a58" kindref="member">eMpblibsOpen</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xStream,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>ulFlags<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="d2/dbb/mpblibs_8h_1ab36b1093281a79e89df6bc15c7665638" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1ab36b1093281a79e89df6bc15c7665638" kindref="member">eMpblibsClose</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xStream<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="d2/dbb/mpblibs_8h_1ab33b7250bac578100156ec98be1506d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1ab33b7250bac578100156ec98be1506d5" kindref="member">eMpblibsRead</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xStream,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xAddrCmdSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvAddrCmd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvBuffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*pxBytesRead<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="d2/dbb/mpblibs_8h_1addabdaa25875fd0be83fbebf6d9b9a63" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1addabdaa25875fd0be83fbebf6d9b9a63" kindref="member">eMpblibsWrite</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xStream,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xAddrCmdSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvAddrCmd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>pvBuffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*pxBytesWritten<sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="d2/dbb/mpblibs_8h_1ae8ab22981886806f6c96eddcf3648b99" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1ae8ab22981886806f6c96eddcf3648b99" kindref="member">eMpblibsIoCtl</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xStream,<sp/>uint32_t<sp/>ulRequest,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvValue<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OTHER<sp/>HARDWARE<sp/>GLUE<sp/>LOGIC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="d2/dbb/mpblibs_8h_1ae24c87925bec628438823d751ce28945" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1ae24c87925bec628438823d751ce28945" kindref="member">eMpblibsI2CRequest</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352" kindref="member">eAccess_t</ref><sp/>eAccess,<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xI2Cx,<sp/>uint8_t<sp/>ucDevAddr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xAddrCmdSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvAddrCmd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvBuffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*pxBytesRW<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="d2/dbb/mpblibs_8h_1a57dc81afcaf7f53c3f40fbf94ce543e8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a57dc81afcaf7f53c3f40fbf94ce543e8" kindref="member">eMpblibsSPIBytesReadWrite</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xSPIx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvBytesOut,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pvBytesIn,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBytes<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="d2/dbb/mpblibs_8h_1a9c8ed36ba5fc73abc945db36f07093e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a9c8ed36ba5fc73abc945db36f07093e2" kindref="member">eMpblibsSPIBlockReadWrite</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1a1baaea34cc49f177f93f0e10145eb352" kindref="member">eAccess_t</ref><sp/>eAccess,<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xSPIx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvBuffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*pxBytesRW<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="d2/dbb/mpblibs_8h_1a99671c017e74b8e321883711657d379d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a99671c017e74b8e321883711657d379d" kindref="member">eMpblibsUartInit</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xUARTx,<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xGPIOx,<sp/>uint32_t<sp/>ulPin,<sp/>uint32_t<sp/>ulBaudRate,<sp/>uint8_t<sp/>ucWordLength,<sp/>uint8_t<sp/>ucStopBits,<sp/>uint8_t<sp/>ucParity,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xSilenceBits,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xFrameTimeoutBits<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="d2/dbb/mpblibs_8h_1a4985f208ca479e6220b1c7ee29272393" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a4985f208ca479e6220b1c7ee29272393" kindref="member">eMpblibsUartRead</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xUARTx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvBuffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*pxBytesRead,<sp/>uint32_t<sp/>ulMsTimeout<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="d2/dbb/mpblibs_8h_1a9df6d174472789a6686acf8382f477e5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a9df6d174472789a6686acf8382f477e5" kindref="member">eMpblibsUartWrite</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xUARTx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pvBuffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*pxBytesWritten,<sp/>uint32_t<sp/>ulMsTimeout<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="d2/dbb/mpblibs_8h_1abb13ab3139806d22c7bc4bb531005d29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1abb13ab3139806d22c7bc4bb531005d29" kindref="member">eMpblibsPwrMonInit</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="d2/dbb/mpblibs_8h_1aabbefd5da0d16e9307544e02b15bc07b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1aabbefd5da0d16e9307544e02b15bc07b" kindref="member">eMpblibsPwrMonWaitPwrUp</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="d2/dbb/mpblibs_8h_1a97ce594607035faceb813e22acc64030" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a97ce594607035faceb813e22acc64030" kindref="member">sMpblibsPwrMonIsLow</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="d2/dbb/mpblibs_8h_1a6e744a80f67d4b8a6548f8eb7b663470" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a6e744a80f67d4b8a6548f8eb7b663470" kindref="member">vMpblibsPowerMonitorSoftReset</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="d2/dbb/mpblibs_8h_1a1ef53a0f200b470e6854c1d5c1cca538" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a1ef53a0f200b470e6854c1d5c1cca538" kindref="member">eMpblibsAnalogReadRaw</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xANALOGx,<sp/>int32_t<sp/>*plReading<sp/>);</highlight></codeline>
<codeline lineno="273" refid="d2/dbb/mpblibs_8h_1ab2970804a7f6d102a545f0339b432314" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1ab2970804a7f6d102a545f0339b432314" kindref="member">eMpblibsAnalogReadmV</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xANALOGx,<sp/>int32_t<sp/>*plReading<sp/>);</highlight></codeline>
<codeline lineno="274" refid="d2/dbb/mpblibs_8h_1a794c9ea4ea4b68f2495afa6cccaf4355" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a794c9ea4ea4b68f2495afa6cccaf4355" kindref="member">eMpblibsAnalogReadRes</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xANALOGx,<sp/>int32_t<sp/>lResolution,<sp/>int32_t<sp/>*plReading<sp/>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="d2/dbb/mpblibs_8h_1a967a436257376a53a7f384abea242671" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a967a436257376a53a7f384abea242671" kindref="member">eMpblibsAnalogWriteRaw</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xANALOGx,<sp/>int32_t<sp/>lOutput<sp/>);</highlight></codeline>
<codeline lineno="285" refid="d2/dbb/mpblibs_8h_1a6d55173401c7ed0bc62ee51c6666a475" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a6d55173401c7ed0bc62ee51c6666a475" kindref="member">eMpblibsAnalogWritemV</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xANALOGx,<sp/>int32_t<sp/>lOutput<sp/>);</highlight></codeline>
<codeline lineno="286" refid="d2/dbb/mpblibs_8h_1a9deebf53f2e0d959103353c0d2a24a51" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a9deebf53f2e0d959103353c0d2a24a51" kindref="member">eMpblibsAnalogWriteRes</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xANALOGx,<sp/>int32_t<sp/>lResolution,<sp/>int32_t<sp/>lOutput<sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="d2/dbb/mpblibs_8h_1af12f280fd24c7935ac12121c97fdf806" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1af12f280fd24c7935ac12121c97fdf806" kindref="member">eMpblibsBinaryRead</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xBINARYx,<sp/><ref refid="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363a" kindref="member">eBool_t</ref>*<sp/>peState<sp/>);</highlight></codeline>
<codeline lineno="297" refid="d2/dbb/mpblibs_8h_1a3fc5cfd4a4f6078f66e17c010fd6243b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a3fc5cfd4a4f6078f66e17c010fd6243b" kindref="member">eMpblibsBinaryWrite</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xBINARYx,<sp/><ref refid="d2/dbb/mpblibs_8h_1a1116febe513ac4a62e1096d1fc2c363a" kindref="member">eBool_t</ref><sp/>eState<sp/>);</highlight></codeline>
<codeline lineno="298" refid="d2/dbb/mpblibs_8h_1a43103ae924d54707ea536cd8bccc330d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a43103ae924d54707ea536cd8bccc330d" kindref="member">eMpblibsBinaryToggle</ref>(<sp/><ref refid="d2/dbb/mpblibs_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/>xBINARYx<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_HEAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="d2/dbb/mpblibs_8h_1ad036997433fb1293f106a4bb696943ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1ad036997433fb1293f106a4bb696943ef" kindref="member">eMpblibsMalloc</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>ppvMemBlock,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xSize<sp/>);</highlight></codeline>
<codeline lineno="309" refid="d2/dbb/mpblibs_8h_1a6b70ece72c639f88ecdb64e1bff68d52" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a83e19efe0ceb2ec5e6ff0a57ca789d41" kindref="member">eMpbError_t</ref><sp/><ref refid="d2/dbb/mpblibs_8h_1a6b70ece72c639f88ecdb64e1bff68d52" kindref="member">eMpblibsRealloc</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>ppvMemBlock,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xSize<sp/>);</highlight></codeline>
<codeline lineno="310" refid="d2/dbb/mpblibs_8h_1abf9d6756e1c391f627ef82cedfbd3daf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1abf9d6756e1c391f627ef82cedfbd3daf" kindref="member">vMpblibsFree</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>ppvMemBlock<sp/>);</highlight></codeline>
<codeline lineno="311" refid="d2/dbb/mpblibs_8h_1adbe40fe763b2ce7c126b0002f104b9af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1adbe40fe763b2ce7c126b0002f104b9af" kindref="member">xMpblibsGetFreeHeapSize</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="312" refid="d2/dbb/mpblibs_8h_1af4a5651f995c3e909071126a6c2efddc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1af4a5651f995c3e909071126a6c2efddc" kindref="member">xMpblibsGetMinEverFreeHeapSize</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MPB_HEAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pvMpblibsHeapPtr(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MALLOC_FAILED_HOOK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="d2/dbb/mpblibs_8h_1a35e6a0f02f66b82bdf12c11321b1e008" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a35e6a0f02f66b82bdf12c11321b1e008" kindref="member">vMpblibsMallocFailedHook</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xSizeRequired<sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>vMpblibsMallocFailedHook(<sp/>expr<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(<sp/>(void)0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_ASSERT_FAILED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>vMpblibsAssertParam(<sp/>expr<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>(expr)<sp/>==<sp/>0<sp/>)<sp/>vMpblibsAssertFailed(<sp/>__func__,<sp/>__FILE__,<sp/>__LINE__<sp/>)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a0dbc68dca2eb32f532e33d5cb19010df" kindref="member">vMpblibsAssertFailed</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*func,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="d2/dbb/mpblibs_8h_1a32b8b02632a14416704460518cdedda5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>vMpblibsAssertParam(<sp/>expr<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(<sp/>(void)0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="d2/dbb/mpblibs_8h_1a0dbc68dca2eb32f532e33d5cb19010df" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/dbb/mpblibs_8h_1a0dbc68dca2eb32f532e33d5cb19010df" kindref="member">vMpblibsAssertFailed</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*func,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line<sp/>);<sp/><sp/></highlight><highlight class="comment">//(<sp/>(void)0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Header<sp/>guard<sp/>-------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>(C)<sp/>COPYRIGHT<sp/>2021<sp/>MPB,<sp/>Montreal,<sp/>Quebec,<sp/>Canada<sp/>***<sp/>END<sp/>OF<sp/>FILE<sp/>***/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Includes/mpblibs.h"/>
  </compounddef>
</doxygen>
