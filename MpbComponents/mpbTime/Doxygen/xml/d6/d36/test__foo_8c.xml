<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d6/d36/test__foo_8c" kind="file" language="C++">
    <compoundname>test_foo.c</compoundname>
    <includes refid="d6/db4/unity_8h" local="yes">unity.h</includes>
    <includes refid="d2/d2b/foo_8h" local="yes">foo.h</includes>
    <includes local="yes">mock_bar.h</includes>
    <includes local="yes">mock_zzz.h</includes>
    <incdepgraph>
      <node id="2">
        <label>unity.h</label>
        <link refid="d6/db4/unity_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c</label>
        <link refid="d6/d36/test__foo_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>setjmp.h</label>
      </node>
      <node id="11">
        <label>mock_bar.h</label>
      </node>
      <node id="3">
        <label>unity_internals.h</label>
        <link refid="d8/de3/unity__internals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limits.h</label>
      </node>
      <node id="8">
        <label>time.h</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="12">
        <label>mock_zzz.h</label>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>foo.h</label>
        <link refid="d2/d2b/foo_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d6/d36/test__foo_8c_1a95c834d6178047ce9e1bce7cbfea2836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setUp</definition>
        <argsstring>(void)</argsstring>
        <name>setUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" line="6" column="6" bodyfile="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" bodystart="6" bodyend="8"/>
        <referencedby refid="d4/db7/test__mpb_time_base__runner_8c_1afb3a9b98e779c4f69e72aca5aa9fa1d7" compoundref="d4/db7/test__mpb_time_base__runner_8c" startline="62" endline="66">resetTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d36/test__foo_8c_1a9909011e5fea0c018842eec4d93d0662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tearDown</definition>
        <argsstring>(void)</argsstring>
        <name>tearDown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" line="10" column="6" bodyfile="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" bodystart="10" bodyend="12"/>
        <referencedby refid="d4/db7/test__mpb_time_base__runner_8c_1afb3a9b98e779c4f69e72aca5aa9fa1d7" compoundref="d4/db7/test__mpb_time_base__runner_8c" startline="62" endline="66">resetTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d36/test__foo_8c_1af1eeda34d0c7ab1f41b5067320a6fff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_foo</definition>
        <argsstring>(void)</argsstring>
        <name>test_foo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" line="14" column="6" bodyfile="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" bodystart="14" bodyend="23"/>
        <references refid="d0/d87/foo_8c_1a6db1ba1a48b0fce98eb0773a86e379d1" compoundref="d0/d87/foo_8c" startline="5" endline="8">foo_turn_on</references>
        <references refid="d6/db4/unity_8h_1af9e5695d6c7cf634206ea6d062cb54c9" compoundref="d6/db4/unity_8h" startline="133">TEST_ASSERT_EQUAL</references>
        <references refid="d6/db4/unity_8h_1a1432f008fb6fb923371d4d0402571bf6" compoundref="d6/db4/unity_8h" startline="235">TEST_ASSERT_EQUAL_STRING</references>
      </memberdef>
      <memberdef kind="function" id="d6/d36/test__foo_8c_1adc19021f83dcbc0bd7dbf8b55a91b288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_foo_again</definition>
        <argsstring>(void)</argsstring>
        <name>test_foo_again</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" line="25" column="6" bodyfile="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" bodystart="25" bodyend="32"/>
        <references refid="d0/d87/foo_8c_1a6db1ba1a48b0fce98eb0773a86e379d1" compoundref="d0/d87/foo_8c" startline="5" endline="8">foo_turn_on</references>
        <references refid="d6/db4/unity_8h_1af9e5695d6c7cf634206ea6d062cb54c9" compoundref="d6/db4/unity_8h" startline="133">TEST_ASSERT_EQUAL</references>
      </memberdef>
      <memberdef kind="function" id="d6/d36/test__foo_8c_1a3d3abb13a8cff65e39b51e001038ea12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_foo_mock_with_const</definition>
        <argsstring>(void)</argsstring>
        <name>test_foo_mock_with_const</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" line="34" column="6" bodyfile="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" bodystart="34" bodyend="40"/>
        <references refid="d0/d87/foo_8c_1a11f21c107c4e0bba2850a7b8343b7ef7" compoundref="d0/d87/foo_8c" startline="10" endline="12">foo_print_message</references>
        <references refid="d6/db4/unity_8h_1af9e5695d6c7cf634206ea6d062cb54c9" compoundref="d6/db4/unity_8h" startline="133">TEST_ASSERT_EQUAL</references>
        <references refid="d6/db4/unity_8h_1a1432f008fb6fb923371d4d0402571bf6" compoundref="d6/db4/unity_8h" startline="235">TEST_ASSERT_EQUAL_STRING</references>
      </memberdef>
      <memberdef kind="function" id="d6/d36/test__foo_8c_1afe52506033d3aab4a08b3e3c4efb27f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_foo_mock_with_variable_args</definition>
        <argsstring>(void)</argsstring>
        <name>test_foo_mock_with_variable_args</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" line="42" column="6" bodyfile="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c" bodystart="42" bodyend="47"/>
        <references refid="d0/d87/foo_8c_1a50473552f0ce06c1a06c1774f9f3501d" compoundref="d0/d87/foo_8c" startline="14" endline="16">foo_print_special_message</references>
        <references refid="d6/db4/unity_8h_1af9e5695d6c7cf634206ea6d062cb54c9" compoundref="d6/db4/unity_8h" startline="133">TEST_ASSERT_EQUAL</references>
        <references refid="d6/db4/unity_8h_1a1432f008fb6fb923371d4d0402571bf6" compoundref="d6/db4/unity_8h" startline="235">TEST_ASSERT_EQUAL_STRING</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/db4/unity_8h" kindref="compound">unity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/d2b/foo_8h" kindref="compound">foo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mock_bar.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mock_zzz.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="d6/d36/test__foo_8c_1a95c834d6178047ce9e1bce7cbfea2836" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d36/test__foo_8c_1a95c834d6178047ce9e1bce7cbfea2836" kindref="member">setUp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="d6/d36/test__foo_8c_1a9909011e5fea0c018842eec4d93d0662" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d36/test__foo_8c_1a9909011e5fea0c018842eec4d93d0662" kindref="member">tearDown</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="d6/d36/test__foo_8c_1af1eeda34d0c7ab1f41b5067320a6fff5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d36/test__foo_8c_1af1eeda34d0c7ab1f41b5067320a6fff5" kindref="member">test_foo</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//When</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d87/foo_8c_1a6db1ba1a48b0fce98eb0773a86e379d1" kindref="member">foo_turn_on</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/db4/unity_8h_1af9e5695d6c7cf634206ea6d062cb54c9" kindref="member">TEST_ASSERT_EQUAL</ref>(1,<sp/>bar_turn_on_fake.call_count);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/db4/unity_8h_1af9e5695d6c7cf634206ea6d062cb54c9" kindref="member">TEST_ASSERT_EQUAL</ref>(1,<sp/>zzz_sleep_fake.call_count);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/db4/unity_8h_1a1432f008fb6fb923371d4d0402571bf6" kindref="member">TEST_ASSERT_EQUAL_STRING</ref>(</highlight><highlight class="stringliteral">&quot;sleepy&quot;</highlight><highlight class="normal">,<sp/>zzz_sleep_fake.arg1_val);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="d6/d36/test__foo_8c_1adc19021f83dcbc0bd7dbf8b55a91b288" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d36/test__foo_8c_1adc19021f83dcbc0bd7dbf8b55a91b288" kindref="member">test_foo_again</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//When</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d87/foo_8c_1a6db1ba1a48b0fce98eb0773a86e379d1" kindref="member">foo_turn_on</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/db4/unity_8h_1af9e5695d6c7cf634206ea6d062cb54c9" kindref="member">TEST_ASSERT_EQUAL</ref>(1,<sp/>bar_turn_on_fake.call_count);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="d6/d36/test__foo_8c_1a3d3abb13a8cff65e39b51e001038ea12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d36/test__foo_8c_1a3d3abb13a8cff65e39b51e001038ea12" kindref="member">test_foo_mock_with_const</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d87/foo_8c_1a11f21c107c4e0bba2850a7b8343b7ef7" kindref="member">foo_print_message</ref>(</highlight><highlight class="stringliteral">&quot;123&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/db4/unity_8h_1af9e5695d6c7cf634206ea6d062cb54c9" kindref="member">TEST_ASSERT_EQUAL</ref>(1,<sp/>bar_print_message_fake.call_count);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/db4/unity_8h_1a1432f008fb6fb923371d4d0402571bf6" kindref="member">TEST_ASSERT_EQUAL_STRING</ref>(</highlight><highlight class="stringliteral">&quot;123&quot;</highlight><highlight class="normal">,<sp/>bar_print_message_fake.arg0_val);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="d6/d36/test__foo_8c_1afe52506033d3aab4a08b3e3c4efb27f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d36/test__foo_8c_1afe52506033d3aab4a08b3e3c4efb27f5" kindref="member">test_foo_mock_with_variable_args</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d87/foo_8c_1a50473552f0ce06c1a06c1774f9f3501d" kindref="member">foo_print_special_message</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/db4/unity_8h_1af9e5695d6c7cf634206ea6d062cb54c9" kindref="member">TEST_ASSERT_EQUAL</ref>(1,<sp/>bar_print_message_formatted_fake.call_count);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/db4/unity_8h_1a1432f008fb6fb923371d4d0402571bf6" kindref="member">TEST_ASSERT_EQUAL_STRING</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>numbers<sp/>are<sp/>%d,<sp/>%d<sp/>and<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>bar_print_message_formatted_fake.arg0_val);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="UnitTestFramework/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c"/>
  </compounddef>
</doxygen>
