<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d5/dbd/nep_math_average_8c" kind="file" language="C++">
    <compoundname>nepMathAverage.c</compoundname>
    <includes local="yes">nepMathAverage.h</includes>
    <includes local="yes">nepMathDivision.h</includes>
    <incdepgraph>
      <node id="3">
        <label>nepMathDivision.h</label>
      </node>
      <node id="2">
        <label>nepMathAverage.h</label>
      </node>
      <node id="1">
        <label>Sources/nepMathAverage.c</label>
        <link refid="d5/dbd/nep_math_average_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d5/dbd/nep_math_average_8c_1a668a4757f277337489afa1f06b5ce7f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eNepError_t</type>
        <definition>eNepError_t eNepMathAverageS32</definition>
        <argsstring>(const int32_t *pslArray, uint16_t usLength, int32_t *pslResult)</argsstring>
        <name>eNepMathAverageS32</name>
        <param>
          <type>const int32_t *</type>
          <declname>pslArray</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>usLength</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pslResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sources/nepMathAverage.c" line="29" column="12" bodyfile="Sources/nepMathAverage.c" bodystart="29" bodyend="51"/>
        <references refid="d4/da2/nep_math_division_8c_1ae2bb9f94ddcb10fe3b08a7c0bcfb594f" compoundref="d4/da2/nep_math_division_8c" startline="155" endline="177">eNepMathDivisionS64</references>
      </memberdef>
      <memberdef kind="function" id="d5/dbd/nep_math_average_8c_1a7c618890b7de463bd3c7d4da0c2b1eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eNepError_t</type>
        <definition>eNepError_t eNepMathAverageFloat</definition>
        <argsstring>(const float *pxArray, uint16_t usLength, float *pxResult)</argsstring>
        <name>eNepMathAverageFloat</name>
        <param>
          <type>const float *</type>
          <declname>pxArray</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>usLength</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>pxResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sources/nepMathAverage.c" line="54" column="12" bodyfile="Sources/nepMathAverage.c" bodystart="54" bodyend="76"/>
        <references refid="d4/da2/nep_math_division_8c_1a33cf184e2e88a8e24b568bcf6271ef27" compoundref="d4/da2/nep_math_division_8c" startline="110" endline="136">eNepMathDivisionDouble</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Library to calculate average. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mikael Plouffe </para>
</simplesect>
<simplesect kind="date"><para>Created on 2019-04-25 </para>
</simplesect>
<simplesect kind="copyright"><para>NEP, Montreal, Qc <heading level="2"><center><copy/> COPYRIGHT 2015 NEP, Montreal, Quebec, Canada</center></heading>
</para>
</simplesect>
<heading level="2"><center><copy/> All rights reserved.</center></heading>
</para>
<para><linebreak/>
<linebreak/>
 <center>This document contains confidential and proprietary information of NEPTRONIC (subject to a non-disclosure agreement) and shall</center> <center>not be disclosed, distributed, or reproduced in whole or in part, without the prior written authorization of NEPTRONIC.</center> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>-----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nepMathAverage.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nepMathDivision.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>define<sp/>-----------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>macro<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>enum<sp/>-------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>struct<sp/>-----------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>variables<sp/>--------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>External<sp/>variables<sp/>-------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>function<sp/>prototypes<sp/>----------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>functions<sp/>--------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>functions<sp/>-------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="d5/dbd/nep_math_average_8c_1a668a4757f277337489afa1f06b5ce7f5" refkind="member"><highlight class="normal">eNepError_t<sp/><ref refid="d5/dbd/nep_math_average_8c_1a668a4757f277337489afa1f06b5ce7f5" kindref="member">eNepMathAverageS32</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*pslArray,<sp/>uint16_t<sp/>usLength,<sp/>int32_t<sp/>*pslResult<sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>eNepError_t<sp/>eResult;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>sllResult<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pslArray<sp/>==<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>usLength<sp/>==<sp/>0<sp/>)<sp/>||<sp/>(<sp/>pslResult<sp/>==<sp/>NULL<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eInvalidParameter;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>uint16_t<sp/>usI<sp/>=<sp/>0;<sp/>usI<sp/>&lt;<sp/>usLength;<sp/>usI++<sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sllResult<sp/>+=<sp/>pslArray[<sp/>usI<sp/>];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>eResult<sp/>=<sp/><ref refid="d4/da2/nep_math_division_8c_1ae2bb9f94ddcb10fe3b08a7c0bcfb594f" kindref="member">eNepMathDivisionS64</ref>(<sp/>sllResult,<sp/>usLength,<sp/>&amp;sllResult<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>eResult<sp/>==<sp/>eSuccess<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pslResult<sp/>=<sp/>sllResult;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eResult;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="d5/dbd/nep_math_average_8c_1a7c618890b7de463bd3c7d4da0c2b1eeb" refkind="member"><highlight class="normal">eNepError_t<sp/><ref refid="d5/dbd/nep_math_average_8c_1a7c618890b7de463bd3c7d4da0c2b1eeb" kindref="member">eNepMathAverageFloat</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pxArray,<sp/>uint16_t<sp/>usLength,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pxResult<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>eNepError_t<sp/>eResult;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xResult<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxArray<sp/>==<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>usLength<sp/>==<sp/>0<sp/>)<sp/>||<sp/>(<sp/>pxResult<sp/>==<sp/>NULL<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eInvalidParameter;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>uint16_t<sp/>usI<sp/>=<sp/>0;<sp/>usI<sp/>&lt;<sp/>usLength;<sp/>usI++<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xResult<sp/>+=<sp/>pxArray[<sp/>usI<sp/>];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>eResult<sp/>=<sp/><ref refid="d4/da2/nep_math_division_8c_1a33cf184e2e88a8e24b568bcf6271ef27" kindref="member">eNepMathDivisionDouble</ref>(<sp/>xResult,<sp/>usLength,<sp/>&amp;xResult<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>eResult<sp/>==<sp/>eSuccess<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pxResult<sp/>=<sp/>xResult;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eResult;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight></codeline>
    </programlisting>
    <location file="Sources/nepMathAverage.c"/>
  </compounddef>
</doxygen>
