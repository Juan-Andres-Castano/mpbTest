<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="de/d61/nep_math_fifo_8c" kind="file" language="C++">
    <compoundname>nepMathFifo.c</compoundname>
    <includes local="yes">nepMathFifo.h</includes>
    <incdepgraph>
      <node id="1">
        <label>Sources/nepMathFifo.c</label>
        <link refid="de/d61/nep_math_fifo_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nepMathFifo.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="de/d61/nep_math_fifo_8c_1ac3f8e66bbdecc61a41280c527009bca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eNepError_t</type>
        <definition>eNepError_t eNepMathFifoInit</definition>
        <argsstring>(xNepMathFifo_t *pxFifo, uint16_t usSize, void *pvBuf)</argsstring>
        <name>eNepMathFifoInit</name>
        <param>
          <type>xNepMathFifo_t *</type>
          <declname>pxFifo</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>usSize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvBuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sources/nepMathFifo.c" line="29" column="13" bodyfile="Sources/nepMathFifo.c" bodystart="29" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="de/d61/nep_math_fifo_8c_1a8f4d6f21aa6405591eddcf700b81d3ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eNepError_t</type>
        <definition>eNepError_t eNepMathFifoReset</definition>
        <argsstring>(xNepMathFifo_t *pxFifo)</argsstring>
        <name>eNepMathFifoReset</name>
        <param>
          <type>xNepMathFifo_t *</type>
          <declname>pxFifo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sources/nepMathFifo.c" line="46" column="13" bodyfile="Sources/nepMathFifo.c" bodystart="46" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="de/d61/nep_math_fifo_8c_1ae5a38b271e8fa7525508454f35ab56d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eNepError_t</type>
        <definition>eNepError_t eNepMathFifoPush</definition>
        <argsstring>(xNepMathFifo_t *pxFifo, const void *pvData, uint16_t usLen, eBool_t eOverwrite)</argsstring>
        <name>eNepMathFifoPush</name>
        <param>
          <type>xNepMathFifo_t *</type>
          <declname>pxFifo</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pvData</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>usLen</declname>
        </param>
        <param>
          <type>eBool_t</type>
          <declname>eOverwrite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sources/nepMathFifo.c" line="61" column="13" bodyfile="Sources/nepMathFifo.c" bodystart="61" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="de/d61/nep_math_fifo_8c_1acb1c9138ba4577cfb6939e879ad5ecb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eNepError_t</type>
        <definition>eNepError_t eNepMathFifoPop</definition>
        <argsstring>(xNepMathFifo_t *pxFifo, void *pvData, uint16_t usLen)</argsstring>
        <name>eNepMathFifoPop</name>
        <param>
          <type>xNepMathFifo_t *</type>
          <declname>pxFifo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvData</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>usLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sources/nepMathFifo.c" line="115" column="13" bodyfile="Sources/nepMathFifo.c" bodystart="115" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="de/d61/nep_math_fifo_8c_1a84bd5c96fa08284eda5f265abd3f1d49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eNepError_t</type>
        <definition>eNepError_t eNepMathFifoPeak</definition>
        <argsstring>(xNepMathFifo_t *pxFifo, void *pvData, uint16_t usLen, uint32_t *pulBytesRead)</argsstring>
        <name>eNepMathFifoPeak</name>
        <param>
          <type>xNepMathFifo_t *</type>
          <declname>pxFifo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvData</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>usLen</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>pulBytesRead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sources/nepMathFifo.c" line="160" column="13" bodyfile="Sources/nepMathFifo.c" bodystart="160" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="de/d61/nep_math_fifo_8c_1a06dbf5eefea242e10021b770eb554258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eNepError_t</type>
        <definition>eNepError_t eNepMathFifoIsFull</definition>
        <argsstring>(xNepMathFifo_t *pxFifo, eBool_t *peFifoIsFull)</argsstring>
        <name>eNepMathFifoIsFull</name>
        <param>
          <type>xNepMathFifo_t *</type>
          <declname>pxFifo</declname>
        </param>
        <param>
          <type>eBool_t *</type>
          <declname>peFifoIsFull</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sources/nepMathFifo.c" line="206" column="13" bodyfile="Sources/nepMathFifo.c" bodystart="206" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="de/d61/nep_math_fifo_8c_1a37c7b2d0833f30ea336bf6b3e07ce976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eNepError_t</type>
        <definition>eNepError_t eNepMathFifoIsEmpty</definition>
        <argsstring>(xNepMathFifo_t *pxFifo, eBool_t *peFifoIsEmpty)</argsstring>
        <name>eNepMathFifoIsEmpty</name>
        <param>
          <type>xNepMathFifo_t *</type>
          <declname>pxFifo</declname>
        </param>
        <param>
          <type>eBool_t *</type>
          <declname>peFifoIsEmpty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sources/nepMathFifo.c" line="218" column="13" bodyfile="Sources/nepMathFifo.c" bodystart="218" bodyend="234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides functions to interface with a FIFO. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Felix Brousseau-Vaillancourt </para>
</simplesect>
<simplesect kind="date"><para>Created on 2019-04-26 </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
<simplesect kind="copyright"><para>NEP, Montreal, Qc <heading level="2"><center><copy/> COPYRIGHT 2015 NEP, Montreal, Quebec, Canada</center></heading>
</para>
</simplesect>
<heading level="2"><center><copy/> All rights reserved.</center></heading>
</para>
<para><linebreak/>
<linebreak/>
 <center>This document contains confidential and proprietary information of NEPTRONIC (subject to a non-disclosure agreement) and shall</center> <center>not be disclosed, distributed, or reproduced in whole or in part, without the prior written authorization of NEPTRONIC.</center> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>-----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nepMathFifo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>define<sp/>-----------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>macro<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>enum<sp/>-------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>struct<sp/>-----------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>variables<sp/>--------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>External<sp/>variables<sp/>-------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>function<sp/>prototypes<sp/>----------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>functions<sp/>--------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>functions<sp/>-------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="de/d61/nep_math_fifo_8c_1ac3f8e66bbdecc61a41280c527009bca6" refkind="member"><highlight class="normal">eNepError_t<sp/><ref refid="de/d61/nep_math_fifo_8c_1ac3f8e66bbdecc61a41280c527009bca6" kindref="member">eNepMathFifoInit</ref>(<sp/>xNepMathFifo_t<sp/>*pxFifo,<sp/>uint16_t<sp/>usSize,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvBuf<sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validate<sp/>Pointers<sp/>and<sp/>Fifo<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo<sp/>==<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>pvBuf<sp/>==<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>usSize<sp/>==<sp/>0<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eInvalidParameter;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>pxFifo-&gt;bFull<sp/><sp/><sp/>=<sp/>eFalse;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>pxFifo-&gt;usPush<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>pxFifo-&gt;usPop<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>pxFifo-&gt;pvBuf<sp/><sp/><sp/>=<sp/>pvBuf;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>pxFifo-&gt;usSize<sp/><sp/>=<sp/>usSize;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eSuccess;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="de/d61/nep_math_fifo_8c_1a8f4d6f21aa6405591eddcf700b81d3ea" refkind="member"><highlight class="normal">eNepError_t<sp/><ref refid="de/d61/nep_math_fifo_8c_1a8f4d6f21aa6405591eddcf700b81d3ea" kindref="member">eNepMathFifoReset</ref>(<sp/>xNepMathFifo_t<sp/>*pxFifo<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validate<sp/>Pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxFifo<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eInvalidParameter;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>pxFifo-&gt;bFull<sp/><sp/>=<sp/>eFalse;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>pxFifo-&gt;usPush<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>pxFifo-&gt;usPop<sp/><sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eSuccess;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="de/d61/nep_math_fifo_8c_1ae5a38b271e8fa7525508454f35ab56d9" refkind="member"><highlight class="normal">eNepError_t<sp/><ref refid="de/d61/nep_math_fifo_8c_1ae5a38b271e8fa7525508454f35ab56d9" kindref="member">eNepMathFifoPush</ref>(<sp/>xNepMathFifo_t<sp/>*pxFifo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvData,<sp/>uint16_t<sp/>usLen,<sp/>eBool_t<sp/>eOverwrite<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>*pucData;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>*pucBuf;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validate<sp/>Pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo<sp/>==<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>pvData<sp/>==<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>pxFifo-&gt;pvBuf<sp/>==<sp/>NULL<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eInvalidParameter;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>verify<sp/>fifo<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo-&gt;bFull<sp/>==<sp/>eTrue<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>eOverwrite<sp/>==<sp/>eFalse<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>FIFO<sp/>is<sp/>full<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eBufferOverflow;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>pucData<sp/>=<sp/>(<sp/>uint8_t<sp/>*<sp/>)pvData;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>pucBuf<sp/><sp/>=<sp/>(<sp/>uint8_t<sp/>*<sp/>)pxFifo-&gt;pvBuf;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Push<sp/>the<sp/>data<sp/>onto<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pucBuf[<sp/>pxFifo-&gt;usPush++<sp/>]<sp/>=<sp/>*pucData++;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usLen--;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>verify<sp/>new<sp/>push<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxFifo-&gt;usPush<sp/>&gt;=<sp/>pxFifo-&gt;usSize<sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxFifo-&gt;usPush<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>fifo<sp/>was<sp/>already<sp/>full<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxFifo-&gt;bFull<sp/>==<sp/>eTrue<sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>usPopIndex<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxFifo-&gt;usPop<sp/>=<sp/>pxFifo-&gt;usPush;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>new<sp/>push<sp/>equals<sp/>usPopIndex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxFifo-&gt;usPush<sp/>==<sp/>pxFifo-&gt;usPop<sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fifo<sp/>now<sp/>full<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxFifo-&gt;bFull<sp/>=<sp/>eTrue;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>there<sp/>are<sp/>still<sp/>bytes<sp/>to<sp/>be<sp/>pushed<sp/>and<sp/>if<sp/>overwrite<sp/>disabled*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>usLen<sp/>&gt;<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>eOverwrite<sp/>==<sp/>eFalse<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eBufferOverflow;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>usLen<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eSuccess;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="de/d61/nep_math_fifo_8c_1acb1c9138ba4577cfb6939e879ad5ecb5" refkind="member"><highlight class="normal">eNepError_t<sp/><ref refid="de/d61/nep_math_fifo_8c_1acb1c9138ba4577cfb6939e879ad5ecb5" kindref="member">eNepMathFifoPop</ref>(<sp/>xNepMathFifo_t<sp/>*<sp/>pxFifo,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>pvData,<sp/>uint16_t<sp/>usLen<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*pucData;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*pucBuf;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validate<sp/>Pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo<sp/>==<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>pvData<sp/>==<sp/>NULL<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eInvalidParameter;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>verify<sp/>fifo<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo-&gt;usPush<sp/>==<sp/>pxFifo-&gt;usPop<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>pxFifo-&gt;bFull<sp/>==<sp/>eFalse<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eUnknownError;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fifo<sp/>is<sp/>not<sp/>full<sp/>anymore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>pxFifo-&gt;bFull<sp/>=<sp/>eFalse;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>pucData<sp/>=<sp/>(<sp/>uint8_t*<sp/>)pvData;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>pucBuf<sp/>=<sp/>(<sp/>uint8_t*<sp/>)pxFifo-&gt;pvBuf;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>usPopIndex<sp/>data<sp/>from<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pucData++<sp/>=<sp/>pucBuf[<sp/>pxFifo-&gt;usPop++<sp/>];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usLen--;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>verify<sp/>new<sp/>usPopIndex<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxFifo-&gt;usPop<sp/>&gt;=<sp/>pxFifo-&gt;usSize<sp/>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxFifo-&gt;usPop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>usPopIndex<sp/>reached<sp/>push<sp/>and<sp/>if<sp/>there<sp/>are<sp/>still<sp/>wanted<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo-&gt;usPush<sp/>==<sp/>pxFifo-&gt;usPop<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>usLen<sp/>&gt;<sp/>0<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eBufferOverflow;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>usLen<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eSuccess;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="de/d61/nep_math_fifo_8c_1a84bd5c96fa08284eda5f265abd3f1d49" refkind="member"><highlight class="normal">eNepError_t<sp/><ref refid="de/d61/nep_math_fifo_8c_1a84bd5c96fa08284eda5f265abd3f1d49" kindref="member">eNepMathFifoPeak</ref>(<sp/>xNepMathFifo_t<sp/>*pxFifo,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvData,<sp/>uint16_t<sp/>usLen,<sp/>uint32_t<sp/>*pulBytesRead<sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>usPopIndex;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>*pucData,<sp/>*pucBuf;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validate<sp/>Pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo<sp/>==<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>pvData<sp/>==<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>pulBytesRead<sp/>==<sp/>NULL<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eInvalidParameter;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>read<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>*pulBytesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>verify<sp/>fifo<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo-&gt;usPush<sp/>==<sp/>pxFifo-&gt;usPop<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>pxFifo-&gt;bFull<sp/>==<sp/>eFalse<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eUnknownError;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>pucData<sp/><sp/><sp/><sp/><sp/>=<sp/>(<sp/>uint8_t<sp/>*<sp/>)pvData;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>pucBuf<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<sp/>uint8_t<sp/>*<sp/>)pxFifo-&gt;pvBuf;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>usPopIndex<sp/><sp/>=<sp/>pxFifo-&gt;usPop;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>usPopIndex<sp/>data<sp/>from<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pucData++<sp/>=<sp/>pucBuf[<sp/>usPopIndex++<sp/>];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usLen--;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>*pulBytesRead<sp/>)++;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>verify<sp/>new<sp/>usPopIndex<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>usPopIndex<sp/>&gt;=<sp/>pxFifo-&gt;usSize<sp/>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usPopIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>usPopIndex<sp/>reached<sp/>push<sp/>and<sp/>if<sp/>there<sp/>are<sp/>still<sp/>wanted<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo-&gt;usPush<sp/>==<sp/>usPopIndex<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>usLen<sp/>&gt;<sp/>0<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eBufferOverflow;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>usLen<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eSuccess;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="de/d61/nep_math_fifo_8c_1a06dbf5eefea242e10021b770eb554258" refkind="member"><highlight class="normal">eNepError_t<sp/><ref refid="de/d61/nep_math_fifo_8c_1a06dbf5eefea242e10021b770eb554258" kindref="member">eNepMathFifoIsFull</ref>(<sp/>xNepMathFifo_t<sp/>*pxFifo,<sp/>eBool_t<sp/>*peFifoIsFull<sp/>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validate<sp/>Pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo<sp/>==<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>peFifoIsFull<sp/>==<sp/>NULL<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eInvalidParameter;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>*peFifoIsFull<sp/>=<sp/>pxFifo-&gt;bFull;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eSuccess;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="de/d61/nep_math_fifo_8c_1a37c7b2d0833f30ea336bf6b3e07ce976" refkind="member"><highlight class="normal">eNepError_t<sp/><ref refid="de/d61/nep_math_fifo_8c_1a37c7b2d0833f30ea336bf6b3e07ce976" kindref="member">eNepMathFifoIsEmpty</ref>(<sp/>xNepMathFifo_t<sp/>*pxFifo,<sp/>eBool_t<sp/>*peFifoIsEmpty<sp/>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validate<sp/>Pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo<sp/>==<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>peFifoIsEmpty<sp/>==<sp/>NULL<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eInvalidParameter;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxFifo-&gt;bFull<sp/>==<sp/>eFalse<sp/>)<sp/>&amp;&amp;<sp/><sp/>(<sp/>pxFifo-&gt;usPush<sp/>==<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>pxFifo-&gt;usPop<sp/>==<sp/>0<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*peFifoIsEmpty<sp/>=<sp/>eTrue;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*peFifoIsEmpty<sp/>=<sp/>eFalse;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eSuccess;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Sources/nepMathFifo.c"/>
  </compounddef>
</doxygen>
